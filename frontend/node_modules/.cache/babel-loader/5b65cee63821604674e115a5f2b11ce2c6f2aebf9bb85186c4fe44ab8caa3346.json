{"ast":null,"code":"const API_URL = 'http://localhost:5001';\nexport const register = async (userId, nama, password) => {\n  try {\n    const response = await fetch(`${API_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(userId),\n        nama: nama,\n        password: password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Registrasi gagal');\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const login = async (userId, password) => {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(userId),\n        password: password\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Login gagal');\n    }\n\n    // Simpan token dan data user di localStorage\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('user', JSON.stringify(data.user));\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["API_URL","register","userId","nama","password","response","fetch","method","headers","body","JSON","stringify","user_id","parseInt","data","json","ok","Error","error","login","localStorage","setItem","token","user","logout","removeItem","getCurrentUser","getItem","parse","isAuthenticated"],"sources":["D:/uas-gacor-sistem-gudang/frontend/src/services/auth.js"],"sourcesContent":["const API_URL = 'http://localhost:5001';\r\n\r\nexport const register = async (userId, nama, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user_id: parseInt(userId),\r\n        nama: nama,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Registrasi gagal');\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (userId, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user_id: parseInt(userId),\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Login gagal');\r\n    }\r\n\r\n    // Simpan token dan data user di localStorage\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem('token');\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,WAAW,EAAE;MAClDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAEC,QAAQ,CAACX,MAAM,CAAC;QACzBC,IAAI,EAAEA,IAAI;QACVC,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,kBAAkB,CAAC;IACnD;IAEA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOjB,MAAM,EAAEE,QAAQ,KAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,QAAQ,EAAE;MAC/CO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAEC,QAAQ,CAACX,MAAM,CAAC;QACzBE,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,aAAa,CAAC;IAC9C;;IAEA;IACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,KAAK,CAAC;IACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACC,SAAS,CAACG,IAAI,CAACS,IAAI,CAAC,CAAC;IAEvD,OAAOT,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,MAAM,GAAGA,CAAA,KAAM;EAC1BJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAChCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMH,IAAI,GAAGH,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOJ,IAAI,GAAGb,IAAI,CAACkB,KAAK,CAACL,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACT,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}